language: php
sudo: false
cache:
    directories:
        - $HOME/.composer/cache/files
        - $HOME/symfony-bridge/.phpunit

env:
  global:
    - SYMFONY_DEPRECATIONS_HELPER="max[self]=0"

matrix:
  fast_finish: true
  include:
      # Minimum supported dependencies with the latest and oldest PHP version
    - php: 7.3
      env: COMPOSER_FLAGS="--prefer-stable --prefer-lowest" SYMFONY_DEPRECATIONS_HELPER="weak_vendors"
    - php: 7.2
      env: COMPOSER_FLAGS="--prefer-stable --prefer-lowest" SYMFONY_DEPRECATIONS_HELPER="weak_vendors"
      # Test the latest stable release
    - php: 7.2
    - php: 7.3
      env: COVERAGE=true PHPUNIT_FLAGS="-v --coverage-text"
      # Test LTS versions. This makes sure we do not use Symfony packages with version greater
      # than 4 when 4 LTS is released. Read more at https://github.com/symfony/lts
#    - php: 7.2
#      env: SYMFONY_VERSION="~4.4.0" SYMFONY_DEPRECATIONS_HELPER="max[self]=0"
      # Latest commit to master
    - php: 7.3
      env: STABILITY="dev"
  allow_failures:
      # Dev-master is allowed to fail.
    - env: STABILITY="dev"

before_install:
  # php.ini configuration
  - |
    INI=~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini
    echo memory_limit = -1 >> $INI
  - if [[ $COVERAGE != true ]]; then phpenv config-rm xdebug.ini || true; fi
  - if ! [ -z "$STABILITY" ]; then composer config minimum-stability ${STABILITY}; fi;
  - if ! [ -v "$SYMFONY_VERSION" ]; then composer config extra.symfony.require "${SYMFONY_VERSION}"; fi;

install:
  - composer update ${COMPOSER_FLAGS} --prefer-dist --no-interaction
  - ./vendor/bin/simple-phpunit install

script:
    - composer validate --strict --no-check-all --no-check-lock
    # simple-phpunit is the PHPUnit wrapper provided by the PHPUnit Bridge component and
    # it helps with testing legacy code and deprecations (composer require symfony/phpunit-bridge)
    - ./vendor/bin/simple-phpunit $PHPUNIT_FLAGS
